name: Deploy to Kubernetes

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    # - name: Install Dependencies
    #   run: |
    #     rm -rf node_modules package-lock.json
    #     npm install

    # - name: Build Angular App
    #   run: npm run build -- --output-path=dist/my-app --configuration=production

    # - name: Debug Angular Build Output
    #   run: ls -la dist/my-app || echo "❌ Directory dist/my-app not found!"

    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        docker build -t 027abdullah/my-app:latest .
        docker push 027abdullah/my-app:latest

    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.26.0
    # - name: Trust ngrok CA Certificate
    #   run: |
    #     echo "$#{{ secrets.NGROK_CA_CERT }}" > /usr/local/share/ca-certificates/ngrok.crt
    #     update-ca-certificates

    # - name: Check Kubernetes Cluster Connection
    #   run: kubectl cluster-info

    # - name: Configure Kubeconfig
    #   run: |
    #     mkdir -p $HOME/.kube
    #     echo "$#{{ secrets.KUBECONFIG }}" | base64 -d > $HOME/.kube/config
    #     chmod 600 $HOME/.kube/config
    #     export KUBECONFIG=$HOME/.kube/config
    #     kubectl config set-cluster default --insecure-skip-tls-verify=true
     

    - name: Configure Kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config
        cat ${HOME}/.kube/config
        kubectl config set-cluster default --insecure-skip-tls-verify=true

    - name: Install kubectl
      run: |
        curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
        chmod +x ./kubectl
        sudo mv ./kubectl /usr/local/bin/kubectl

    # - name: Deploy to Kubernetes
    #   run: |
    #     kubectl apply -f k8s/deployment.yaml
    #     kubectl apply -f k8s/service.yaml
    #     kubectl apply -f k8s/ingress.yaml
       

    # - name: Verify Deployment
    #   run: kubectl get pods
    
    - name: Verify Kubernetes cluster
      run: |
        kubectl --kubeconfig=$HOME/.kube/config get nodes
